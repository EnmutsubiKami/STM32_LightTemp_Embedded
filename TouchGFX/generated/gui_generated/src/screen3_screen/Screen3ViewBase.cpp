/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Screen3ViewBase::Screen3ViewBase() :
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    luxTxt_1.setXY(105, 130);
    luxTxt_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    luxTxt_1.setLinespacing(0);
    luxTxt_1Buffer[0] = 0;
    luxTxt_1.setWildcard(luxTxt_1Buffer);
    luxTxt_1.resizeToCurrentText();
    add(luxTxt_1);

    textArea2_2.setXY(37, 85);
    textArea2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_2.setLinespacing(0);
    add(textArea2_2);

    textArea2_1_1.setXY(35, 177);
    textArea2_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1_1.setLinespacing(0);
    textArea2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V8U4));
    add(textArea2_1_1);

    luxSettingTxt.setXY(96, 229);
    luxSettingTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    luxSettingTxt.setLinespacing(0);
    Unicode::snprintf(luxSettingTxtBuffer, LUXSETTINGTXT_SIZE, "%s", touchgfx::TypedText(T_LUX_TEXT).getText());
    luxSettingTxt.setWildcard(luxSettingTxtBuffer);
    luxSettingTxt.resizeToCurrentText();
    luxSettingTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RWZE));
    luxSettingTxt.setVisible(false);
    add(luxSettingTxt);

    decreaseBtn.setBoxWithBorderPosition(0, 0, 50, 50);
    decreaseBtn.setBorderSize(0);
    decreaseBtn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    decreaseBtn.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_000000_SVG_ID));
    decreaseBtn.setIconXY(0, 0);
    decreaseBtn.setVisible(false);
    decreaseBtn.setAction(flexButtonCallback);
    decreaseBtn.setPosition(17, 228, 45, 44);
    add(decreaseBtn);

    flexButton1_2.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
    flexButton1_2.setIconXY(0, 0);
    flexButton1_2.setAction(flexButtonCallback);
    flexButton1_2.setPosition(204, 282, 32, 32);
    add(flexButton1_2);

    textArea1.setXY(36, 7);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(5, 47, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EGLL));
    add(textArea1);

    increaseBtn.setBoxWithBorderPosition(0, 0, 50, 50);
    increaseBtn.setBorderSize(0);
    increaseBtn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    increaseBtn.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_000000_SVG_ID));
    increaseBtn.setIconXY(0, 0);
    increaseBtn.setVisible(false);
    increaseBtn.setAction(flexButtonCallback);
    increaseBtn.setPosition(174, 228, 45, 44);
    add(increaseBtn);

    textArea2.setXY(37, 85);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7GVM));
    add(textArea2);

    textArea2_1.setXY(35, 130);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N37S));
    add(textArea2_1);

    onTxt.setXY(105, 85);
    onTxt.setColor(touchgfx::Color::getColorFromRGB(101, 196, 33));
    onTxt.setLinespacing(0);
    onTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2PF));
    onTxt.setVisible(false);
    add(onTxt);

    offTxt.setXY(105, 85);
    offTxt.setColor(touchgfx::Color::getColorFromRGB(194, 33, 33));
    offTxt.setLinespacing(0);
    offTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5DGI));
    offTxt.setVisible(false);
    add(offTxt);

    luxTxt.setXY(105, 130);
    luxTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    luxTxt.setLinespacing(0);
    Unicode::snprintf(luxTxtBuffer, LUXTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_R23E).getText());
    luxTxt.setWildcard(luxTxtBuffer);
    luxTxt.resizeToCurrentText();
    luxTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MVXD));
    add(luxTxt);

    settingMode.setXY(129, 164);
    settingMode.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_SMALL_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_SMALL_OFF_LIGHT_ID));
    settingMode.setAction(buttonCallback);
    add(settingMode);

    timeTxt.setXY(76, 49);
    timeTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    timeTxt.setLinespacing(0);
    Unicode::snprintf(timeTxtBuffer, TIMETXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WOKT).getText());
    timeTxt.setWildcard(timeTxtBuffer);
    timeTxt.resizeToCurrentText();
    timeTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LDT9));
    add(timeTxt);
}

Screen3ViewBase::~Screen3ViewBase()
{

}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1_2)
    {
        //Interaction1
        //When flexButton1_2 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
    if (&src == &increaseBtn)
    {
        //Interaction2
        //When increaseBtn clicked call virtual function
        //Call increaseLux
        increaseLux();
    }
    if (&src == &decreaseBtn)
    {
        //Interaction3
        //When decreaseBtn clicked call virtual function
        //Call decreaseLux
        decreaseLux();
    }
}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &settingMode)
    {
        //Interaction4
        //When settingMode clicked call virtual function
        //Call showSetting
        showSetting();
    }
}
